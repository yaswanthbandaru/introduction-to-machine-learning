# -*- coding: utf-8 -*-
"""project1_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gzxHyoxSx3RlxMYXCTNEH-IdonYrYFdE
"""

import sklearn
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

boston = load_boston()
data = boston.data
data = pd.DataFrame(data = data, columns = boston.feature_names)

data['price'] = boston.target

corr_mat = data.corr()
corr_mat['price'].sort_values()

#removing the target values from x
x = data.drop('price', axis = 1)
#removing the feature which is less correlated with price
x = data.drop('CHAS', axis = 1)
y = data['price']

scaler = StandardScaler()

x_train, x_test, y_train, y_test = train_test_split(x, y, random_state = 42, test_size = 0.2)

x_train_scaled = scaler.fit_transform(x_train)
x_test_scaled = scaler.transform(x_test)

model = LinearRegression()
model.fit(x_train_scaled, y_train)

y_predictions = model.predict(x_test_scaled)

mae = sklearn.metrics.mean_absolute_error(y_test, y_predictions)
print("mea ", mae)
score = sklearn.metrics.r2_score(y_test, y_predictions)
print("r2_score ", score)
rmse = sklearn.metrics.mean_squared_error(y_test, y_predictions)
print("rmse ", rmse)



